{"version":3,"sources":["components/inputArea.js","components/instruction.js","components/Green/Green.js","components/Red/Red.js","components/Yellow/Yellow.js","components/Blue/Blue.js","components/Level/Level.js","containers/App.js","serviceWorker.js","index.js"],"names":["InputArea","onInputChange","onButtonClick","clearText","className","id","type","onChange","onClick","Intruction","levelNumber","Green","Red","Yellow","Blue","Level","level","restart","App","number","updateLevelNumber","val","Math","floor","random","state","event","setState","input","target","value","length","result","parseInt","answer","setTimeout","levelPass","alert","document","getElementById","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ea34080.chunk.js","sourcesContent":["import React from 'react';\r\nconst InputArea = ({ onInputChange , onButtonClick, clearText})=>{\r\n    return(\r\n            <div className='center'>\r\n                <div className='pa3 br5 shadow-5 form center'>\r\n                    <input className='pa2 f3 w-40 center' id='inputNumber' type='number' onChange={onInputChange}></input>\r\n                    <button className='w-30 f3 link grow ph3 pv2 dib white bg-light-purple ml1 pointer' \r\n                    onClick={onButtonClick}>Check</button>\r\n                    <button className='w-30 f3 link grow ph3 pv2 dib white bg-light-purple ml1 pointer' \r\n                    onClick={clearText}>Clear</button>\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\nexport default InputArea;","import React from 'react';\r\nconst Intruction = ({levelNumber})=>{\r\n    return(\r\n        <article className=\"center mw5 mw6-ns br3 hidden ba b--black-10 mv4 shadow-5\">\r\n        <div className=\"pa3 bt b--black-10\">\r\n        <p className=\"f3 b tc\">Instruction</p>\r\n          <p className=\"f6 f5-ns lh-copy measure\">\r\n          Guess a number between 1 and {levelNumber}, if you guessed the right number game will move to next level you will have as many attempts as you want.\r\n          </p>\r\n        </div>\r\n      </article>\r\n    );\r\n};\r\nexport default Intruction;","import React from 'react';\r\nimport './Green.css'\r\nconst Green = ()=>{\r\n    return(\r\n        <div className='center green link black dim pointer'>\r\n        <div className='textStyle'>CORRECT</div>\r\n        </div>\r\n    );\r\n};\r\nexport default Green;","import React from 'react';\r\nimport './Red.css'\r\nconst Red = ()=>{\r\n    return(\r\n        <div className='center red link black dim pointer'>\r\n        <div className='textStyle'>HOT</div>\r\n        </div>\r\n    );\r\n};\r\nexport default Red;","import React from 'react';\r\nimport './Yellow.css'\r\nconst Yellow = ()=>{\r\n    return(\r\n        <div className='center yellow link black dim pointer'>\r\n        <div className='textStyle'>WARM</div>\r\n        </div>\r\n    );\r\n};\r\nexport default Yellow;","import React from 'react';\r\nimport './Blue.css'\r\nconst Blue = ()=>{\r\n    return(\r\n        <div className='center blue link black dim pointer'>\r\n        <div className='textStyle'>COLD</div>\r\n        </div>\r\n    );\r\n};\r\nexport default Blue;","import React from 'react';\r\nimport './Level.css'\r\nconst Level = ({level, restart})=>{\r\n    return(<div className='set'>\r\n        <div className='textStyle bpr-2 grow pointer level shadow-2'>Level {level}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default Level;","import React from 'react';\nimport InputArea from '../components/inputArea';\nimport Instrucion from '../components/instruction';\nimport Green from '../components/Green/Green';\nimport Red from '../components/Red/Red';\nimport Yellow from '../components/Yellow/Yellow';\nimport Blue from '../components/Blue/Blue';\nimport Level from '../components/Level/Level';\nimport 'tachyons';\n\n \n\nclass App extends React.Component{\n  constructor(){\n    super()\n    \n    this.state={\n      input:'',\n      answer:'',\n      level: 1,\n      levelNumber: 100\n}\n  }\n  number={};\n  componentDidMount(){\n    this.number.val = Math.floor((Math.random() *  this.state.levelNumber) + 1);\n  }\n\n  updateLevelNumber = () =>{\n    this.number.val = Math.floor((Math.random() *  (this.state.levelNumber+100)) + 1);\n  }\n\n\n  onInputChange = (event) =>{\n    this.setState({input : event.target.value });\n  }\n  \n  onButtonClick=()=>{\n    if(this.state.input.length){\n      var a = parseInt(this.state.input);\n      var b = this.number.val;\n      var result = a-b;\n      if (result<1){\n        result=result*-1;\n      };\n      if (result===0){\n        this.setState({answer:'green'});\n        this.setState({level:this.state.level+1});\n        this.setState({levelNumber:this.state.levelNumber+100});\n        this.updateLevelNumber();\n        setTimeout(this.levelPass, 2000)\n      }else if(result>=1 && result<=4){\n        this.setState({answer:'red'});\n      }else if(result>=5 && result<=15){\n        this.setState({answer:'yellow'});\n      }else{\n        this.setState({answer:'blue'});\n      }\n      \n    }\n  }\n  levelPass =()=>{\n    alert('You are promoted to next level.')\n    this.clearText();\n  }\n  clearText=()=>{\n    document.getElementById('inputNumber').value = \"\";\n    this.setState({input : ''});\n    this.setState({answer:''});\n  }    \n\n\n  render(){\n    return(\n      <div>\n        <div className=\"f2 b tc pa2\">Number Guessing Game</div>\n        <Level level={this.state.level}/>\n        <Instrucion levelNumber={this.state.levelNumber}/>\n        <InputArea onInputChange = {this.onInputChange} onButtonClick = {this.onButtonClick} clearText={this.clearText}/>\n        {this.state.answer.length\n        ?\n        (\n        this.state.answer === 'green' \n        ?\n          <Green/>\n        :\n        (\n          this.state.answer === 'red'\n          ?\n          <Red/>\n          :\n          (\n            this.state.answer === 'yellow'\n            ?\n            <Yellow/>\n            :\n            this.state.answer === 'blue'\n            ?\n            <Blue/>\n            :\n            <div></div>\n          )\n        )\n        )\n        :\n        <div></div>\n        }\n        </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}